apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ include "authgear.nameMain" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: Role
  name: {{ include "authgear.nameMain" . | quote }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.authgear.mainServer.replicas }}
  selector:
    matchLabels:
      {{- include "authgear.mainSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authgear.mainSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "authgear.nameMain" . | quote }}
      {{ if .Values.authgear.appCustomResources.path }}
      volumes:
      - name: custom-resources
        {{- toYaml .Values.authgear.appCustomResources.volume | nindent 8 }}
      {{ end }}
      containers:
      - name: authgear-main-server
        image: {{ .Values.authgear.mainServer.image | quote }}
        imagePullPolicy: Always
        args: ["authgear", "start", "main"]
        {{ if .Values.authgear.appCustomResources.path }}
        volumeMounts:
        - name: custom-resources
          mountPath: {{ .Values.authgear.appCustomResources.path | quote }}
        {{ end }}
        env:
        - name: DATABASE_URL
          value: {{ .Values.authgear.databaseURL | quote }}
        - name: DATABASE_SCHEMA
          value: {{ .Values.authgear.databaseSchema | quote }}
        - name: REDIS_URL
          value: {{ .Values.authgear.redisURL | quote }}
        - name: TRUST_PROXY
          value: {{ .Values.authgear.trustProxy | quote }}
        - name: CORS_ALLOWED_ORIGINS
          value: {{ printf "portal.%s" .Values.authgear.baseHost | quote }}
        {{- if .Values.authgear.imagesServer.cdn.host }}
        - name: IMAGES_CDN_HOST
          value: {{ .Values.authgear.imagesServer.cdn.host | quote }}
        {{- end }}
        - name: LOG_LEVEL
          value: {{ .Values.authgear.logLevel | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.authgear.sentryDSN | quote }}
        - name: CONFIG_SOURCE_TYPE
          value: {{ .Values.authgear.configSourceType | quote }}
        - name: CONFIG_SOURCE_KUBE_NAMESPACE
          value: {{ .Values.authgear.appNamespace | quote }}
        - name: CUSTOM_RESOURCE_DIRECTORY
          value: {{ .Values.authgear.appCustomResources.path | quote }}
        {{- range $key, $val := .Values.authgear.mainServer.env }}
        - name: {{ $key | quote }}
          value: {{ $val | quote }}
        {{- end }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
          {{- toYaml .Values.authgear.mainServer.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "authgear.mainSelectorLabels" . | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.nameMain" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  type: ExternalName
  externalName: {{ include "authgear.nameMain" . }}.{{ .Release.Namespace }}.svc.cluster.local
  ports:
  - port: 80
