apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authgear.nameResolver" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "authgear.resolverSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authgear.resolverSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "authgear.nameMain" . | quote }}
      {{ if .Values.authgear.appCustomResources.path }}
      volumes:
      - name: custom-resources
        {{- toYaml .Values.authgear.appCustomResources.volume | nindent 8 }}
      {{ end }}
      containers:
      - name: authgear-resolver-server
        image: {{ .Values.authgear.mainServer.image | quote }}
        args: ["authgear", "start", "resolver"]
        {{ if .Values.authgear.appCustomResources.path }}
        volumeMounts:
        - name: custom-resources
          mountPath: {{ .Values.authgear.appCustomResources.path | quote }}
        {{ end }}
        env:
        - name: TRUST_PROXY
          value: {{ .Values.authgear.mainServer.env.TRUST_PROXY | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.authgear.mainServer.env.LOG_LEVEL | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.authgear.mainServer.env.SENTRY_DSN | quote }}
        - name: ADMIN_API_AUTH
          value: {{ .Values.authgear.mainServer.env.ADMIN_API_AUTH | quote }}
        - name: CONFIG_SOURCE_TYPE
          value: {{ .Values.authgear.mainServer.env.CONFIG_SOURCE_TYPE | quote }}
        - name: CONFIG_SOURCE_KUBE_NAMESPACE
          value: {{ .Values.authgear.appNamespace | quote }}
        - name: CUSTOM_RESOURCE_DIRECTORY
          value: {{ .Values.authgear.appCustomResources.path | quote }}
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
          {{- toYaml .Values.authgear.resolverServer.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.nameResolver" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "authgear.resolverSelectorLabels" . | nindent 4 }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ include "authgear.nameResolver" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.subcharts.certmanager.acme.ingress.class | quote }}
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: {{ printf "%s-stripprefixresolver@kubernetescrd" .Release.Namespace | quote }}
    kubernetes.io/tls-acme: {{ .Values.authgear.resolverServer.ingress.tls.acme.enabled | quote }}
    acme.cert-manager.io/http01-ingress-class: {{ .Values.subcharts.certmanager.acme.ingress.class | quote }}
    cert-manager.io/issuer: "letsencrypt-http01"
spec:
  rules:
  - host: {{ .Values.authgear.portalServer.appHostWildcard | quote }}
    http:
      paths:
      - backend:
          serviceName: {{ include "authgear.nameResolver" . | quote }}
          servicePort: 80
        path: /_resolver
  tls:
  - hosts:
    - {{ .Values.authgear.portalServer.appHostWildcard | quote }}
    secretName: {{ .Values.authgear.resolverServer.ingress.tls.secretName | quote }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ printf "%s-http" (include "authgear.nameResolver" .) | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.subcharts.certmanager.acme.ingress.class | quote }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: {{ printf "%s-redirecthttptohttps@kubernetescrd" .Release.Namespace | quote }}
spec:
  rules:
  - host: {{ .Values.authgear.portalServer.appHostWildcard | quote }}
    http:
      paths:
      - backend:
          serviceName: {{ include "authgear.nameResolver" . | quote }}
          servicePort: 80
        path: /_resolver
